<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
  <!ENTITY name      "lucky">
  <!ENTITY author    "stl88083365">
  <!ENTITY version   "2024.06.04">
  <!ENTITY gitURL    "https://github.com/&author;/unraid-lucky/releases/download">
  <!ENTITY pluginURL "https://raw.githubusercontent.com/stl88083365/unraid-lucky/test/lucky.plg">
  <!ENTITY md5       "9b99a9d0e8e577fac1d02d741ec86709">
  <!ENTITY plugin    "/boot/config/plugins/lucky">
  <!ENTITY emhttp    "/usr/local/emhttp/plugins/lucky">
]>

<PLUGIN  name="&name;" author="&author;" version="&version;" pluginURL="&pluginURL;" min="6.9.0-beta31">

<CHANGES>

###2024.06.04
- Tested ...

</CHANGES>

<FILE Name="&emhttp;/README.md">
<INLINE>

**lucky**

For further information go to the source Github repository: https://github.com/stl88083365/unraid-lucky .  
  
Lucky is highly customizable and supports the running of various custom scripts.
However, once the account password and backend entrance are leaked, it may bring unforeseen consequences.
Therefore, it is very important to set up a secure portal.
When you set the secure entry to 666, the Lucky login page will not be displayed when you visit http://{IP}:16601.
Instead, you will need to visit http://{IP}:16601/666. Therefore, please try to make the secure entry as complex as possible and use HTTPS when accessing from outside the network.

Default login : http://{IP address}:16601
Default Account Number : 666
Default Password : 666

</INLINE>
</FILE>

<FILE Run="/bin/bash">
<INLINE>

install() {
echo "1" >> /boot/1.log
if [ ! -d /boot/config/lucky ]; then
    echo "Directory /boot/config/lucky does not exist, creating it now..."
    mkdir -p /boot/config/lucky
else
    echo "Directory /boot/config/lucky already exists."
fi

/sbin/installpkg "$PLUGIN_DIR/$LAT_PACKAGE"

chmod +x /etc/lucky/lucky

(crontab -l 2>/dev/null; echo "*/1 * * * * /etc/lucky/luckypid.sh") | crontab -

/etc/luckypid.sh

}

download() {
echo "2" >> /boot/1.log
if [ ! -f "/boot/config/plugins/lucky/$VER_P/$(LAT_PACKAGE)" ]; then
  echo "/boot/config/plugins/lucky/$VER_P/$LAT_PACKAGE" >> /boot/1.log
  echo "2.5" >> /boot/1.log
  wget -q -nc --show-progress --progress=bar:force:noscroll -O "$PLUGIN_DIR/$LAT_PACKAGE" "$GIT_URL/$LAT_PACKAGE"
  wget -q -nc --show-progress --progress=bar:force:noscroll -O "$PLUGIN_DIR/$LAT_PACKAGE.md5" "$GIT_URL/$LAT_PACKAGE.md5"
    if [ "$(md5sum "$PLUGIN_DIR/$LAT_PACKAGE" | awk '{print $1}')" != "$(cat "$PLUGIN_DIR/$LAT_PACKAGE.md5" | awk '{print $1}')" ]; then
      echo "2.51" >> /boot/1.log
      echo
      echo "-----ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR - ERROR------"
      echo "--------------------------------CHECKSUM ERROR!---------------------------------"
      rm -rf $PLUGIN_DIR $emhttp
      exit 1
    fi            
echo
echo "-------------Successfully downloaded lucky, please wait...!------------"
fi
}

echo "0" >> /boot/1.log
LAT_PACKAGE="unraid-lucky.txz"
VER_P="v1.0"
PLUGIN_DIR="/boot/config/plugins/lucky/$VER_P"
GIT_URL="https://github.com/stl88083365/unraid-lucky/releases/download/$VER_P"
## emhttp="/usr/local/emhttp/plugins/lucky"

if [ ! -d "$PLUGIN_DIR" ]; then
  mkdir -p "$PLUGIN_DIR"
fi

# Check for old packages
rm -rf $(ls -d $PLUGIN_DIR/* | grep -v "$VER_P")

# Check if lucky is allready downloaded and installed
# check
if [ ! -z "$(pidof lucky)" ]; then
    echo
    echo "------------------Installation of lucky successful---------------------"
    echo
else
    echo
    echo "-------------------Downloading lucky, please wait...!-------------------"
    download > /dev/null
    echo
    echo "-------------------Installing lucky, please wait...!-------------------"
    install > /dev/null
    echo
    echo "------------------Installation of lucky successful---------------------"
    echo
fi


</INLINE>
</FILE>

<FILE Run="/bin/bash" Method="remove">
<INLINE>

echo "---------------------------------------"
echo "------Uninstalling lucky-------"
echo "---------------------------------------"
# Remove plugin related files
PID=$(pidof lucky)
if [ ! -z "$PID" ]; then
    echo "Lucky process is running. Stopping it..."
    kill $PID
    wait $PID 2>/dev/null
    echo "Lucky process has been stopped."
else
    echo "Lucky process is not running."
fi
rm -rf &plugin;
rm -rf &emhttp;
rm -rf /etc/lucky
echo
echo "----------------------------------------------------------------------------"
echo "----------lucky uninstalled, please reboot your server!-------------"
echo "----------------------------------------------------------------------------"
echo

</INLINE>
</FILE>
</PLUGIN>
